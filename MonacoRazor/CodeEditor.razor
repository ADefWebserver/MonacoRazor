@inject IJSRuntime JS

<div class="editor" @ref="element"></div>

@code {
    [Parameter] public string Language { get; set; }
    [Parameter] public string Code { get; set; }
    [Parameter] public EventCallback<string> CodeChanged { get; set; }

    private ElementReference element;
    private readonly Lazy<Task<IJSObjectReference>> moduleTask;

    public CodeEditor()
    {
        moduleTask = new(() => JS.InvokeAsync<IJSObjectReference>(
               "import", "./_content/MonacoRazor/main.js").AsTask());
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var module = await moduleTask.Value;
            await module.InvokeVoidAsync("init", element, Language ?? "csharp", Code);
        }
    }
}
